package org.instedd.hub.client.http.utils;

import java.io.UnsupportedEncodingException;

import org.apache.commons.codec.binary.Base64;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * @author Kakada Chheang
 */
public class EncodingUtils
{
    private static final Log log = LogFactory.getLog( EncodingUtils.class );
    
    private static final String CHARSET = "8859_1";
    private static final Base64 codec = new Base64();

    /**
     * Encrypts a string with Base64 encoding.
     * 
     * @param string the string to encrypt.
     */
    public static String encryptBase64( String string )
    {
        try
        {
            byte[] data = codec.encode( string.getBytes( CHARSET ) );
            
            return new String( data, CHARSET );
        }
        catch ( UnsupportedEncodingException e )
        {
            log.warn( "Could not encrypt string because of unsupported encoding: " + CHARSET );
            
            return null;
        }
    }

    /**
     * Decrypts a string with Base64 encoding.
     * 
     * @param string the string to decrypt.
     */
    public static String decryptBase64( String string )
    {
        try
        {
            byte[] data = codec.decode( string.getBytes( CHARSET ) );
            
            return new String( data, CHARSET );
        }
        catch ( UnsupportedEncodingException e )
        {
            log.warn( "Could not decrypt string because of unsupported encoding: " + CHARSET );
            
            return null;
        }
    }
    
    
    /**
     * Returns a basic authentication string which is generated by prepending 
     * "Basic " and base64-encoding username:password.
     * 
     * @param username the username to use for authentication.
     * @param password the password to use for authentication.
     * @return the 
     */
    public static String getBasicAuthString( String username, String password )
    {        
        String string = username + ":" + password;
        
        return "Basic " + Base64.encodeBase64String( string.getBytes() );
    }    
}

